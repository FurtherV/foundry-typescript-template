name: Release Creation

on:
    release:
        types: [published]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # Checkout the Repository
            - uses: actions/checkout@v2

            # Get part of the tag after the `v`
            - name: Extract tag version number
              id: get_version
              uses: battila7/get-version-action@v2

            # Setup Node.JS and NPM
            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "14.x"

            # Install dependencies from root package.json
            - name: Install Dependencies
              run: npm install

            - name: Install Gulp CLI
              run: npm install -g gulp-cli

            # Run gulp tasks clean, build and zip in order
            - name: Run Gulp Tasks
              run: |
                  gulp clean
                  gulp build
                  gulp zip
              env:
                  version: ${{steps.get_version.outputs.version-without-v}}
                  url: https://github.com/${{github.repository}}
                  manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
                  download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip
                  changelog: https://github.com/${{github.repository}}/blob/master/CHANGELOG.md
                  readme: https://github.com/${{github.repository}}/blob/master/README.md
                  license: https://github.com/${{github.repository}}/blob/master/LICENSE

            # Create a release for this specific version
            - name: Update Release with Files
              id: create_version_release
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: true # Set this to false if you want to prevent updating existing releases
                  name: ${{ github.event.release.name }}
                  draft: ${{ github.event.release.unpublished }}
                  prerelease: ${{ github.event.release.prerelease }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  artifacts: "./dist/module.json, ./module.zip"
                  tag: ${{ github.event.release.tag_name }}
                  body: ${{ github.event.release.body }}
